plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'application'

    id 'com.github.hierynomus.license' version '0.11.0'
    id 'com.github.johnrengelman.shadow' version '1.2.1'
}

repositories {
    mavenCentral()
    maven {
        name = 'minecraft'
        url = 'https://libraries.minecraft.net'
    }
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
    maven {
        name = 'sonatype-snapshots'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

version = '0.1-SNAPSHOT'

mainClassName = 'net.minecrell.quartz.launch.QuartzMain'

configurations {
    minecraft
}

sourceSets {
    main {
        compileClasspath += configurations.minecraft
    }
}

idea {
    module {
        scopes.COMPILE.plus += [configurations.minecraft]
    }
}

dependencies {
    minecraft project(':mappings')
    compile(project(':mappings')) {
        transitive = false
    }

    compile(project(':SpongeAPI')) {
        exclude module: 'guava'
        exclude module: 'jsr305'
        exclude module: 'asm'
    }

    compile 'org.ow2.asm:asm-debug-all:5.0.3'
    runtime 'org.ow2.asm:asm-all:5.0.3'

    compile('org.spongepowered:mixin:0.2-SNAPSHOT') {
        transitive = false
    }

    compile 'net.sf.jopt-simple:jopt-simple:4.6'
    minecraft('net.minecraft:launchwrapper:1.11') {
        transitive = false
    }

    runtime 'org.apache.logging.log4j:log4j-slf4j-impl:2.0-beta9'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-deprecation', '-proc:none']
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes(
                'Specification-Name': 'SpongeAPI',
                'Specification-Version': 'TODO',
                'Specification-Vendor': 'SpongePowered',
                'Implementation-Name': name,
                'Implementation-Version': version,
                'Implementation-Vendor': 'Minecrell',
                'Class-Path': 'bin/launchwrapper-1.11.jar bin/minecraft_server.1.8.3.jar'
        )
    }
}

def getClassFiles(project) {
    new File(new File(project.buildDir, 'classes'), 'main')
}

shadowJar.doFirst {
    copy {
        from getClassFiles(project(':mappings'))
        include 'net/minecraft/**'
        into new File(new File(temporaryDir, 'mappings'), 'mappings')
    }
}

shadowJar {
    classifier = ''
    exclude 'net/minecraft/**'

    from new File(temporaryDir, 'mappings')
}
build.dependsOn(shadowJar)

// License header formatting
license {
    header rootProject.file('LICENSE')
    exclude '*.txt'
    exclude '*.xml'
    exclude '*.json'
    sourceSets = project.sourceSets
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

configure([distZip, distTar]) {
    enabled = false
}

// Disable checkstyle and Javadocs for SpongeAPI
project(':SpongeAPI') {
    afterEvaluate {
        configure([javadoc, javadocJar, sourceJar, licenseFormat]) {
            enabled = false
        }
        tasks.withType(Checkstyle) {
            enabled = false
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
